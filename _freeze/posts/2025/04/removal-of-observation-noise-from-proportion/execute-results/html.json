{
  "hash": "172d4863ddfcac3eb392b2286cc1936e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"割合データ（割り算値）から観測ノイズを除去する\"\nlang: ja\ncategories: [Japanese, Statistics]\ndate: \"2025-04-13\"\nformat:\n  html:\n    df-print: paged\n---\n\n\n\nこの記事では，以下のような割合データ（割り算値）を扱うときにしばしば生じる少数問題への対処法について説明します．\n\n-   地域別の感染症の罹患率\n-   店舗別の一定時間あたりの来店客数\n-   学校別の難関校合格率\n\n少数問題（small number problem）とは，観測値が小さい場合に割合データのばらつきが大きくなることを指します． 以下では，カウントデータが従うことが多いとされるポアソン分布を対象に少数問題の対処法を考えます（二項分布でも同様の議論を展開することができます）． 分母にあたる人口等が$N$，割合の真値が$\\theta$のとき，分子にあたるカウントデータ（感染者数等）$n$は以下のようなポアソン分布に従うと考えられます．\n\n$$\nn \\sim \\text{Poisson}(N \\theta)\n$$\n\nさらに，このポアソン分布の分散は以下のように表されます．\n\n$$\n\\text{Var}[n] = N \\theta\n$$\n\n割合（真値）を推定するための素朴な方法として，$n$を$N$で割ることが考えられます． しかし，この方法で得られる割合の分散は以下のように，$N$が小さいときに分散が大きくなるという性質を持っています． こうした性質は，ポアソン分布や二項分布のように分散（観測ノイズ）が期待値と比例する分布に共通するものです．\n\n$$\n\\text{Var}\\left[\\frac{n}{N}\\right] = \\frac{\\theta}{N}\n$$\n\nこうした観測ノイズの性質は，たとえば難関校合格率の学校別ランキング等を考えた場合に問題となる可能性があります． 総受験者数が大きく異なる以下のような学校Aと学校Bを比べてみましょう．\n\n| 学校  | 総受験者数 | 難関校合格者数 | 難関校合格率 |\n|-------|------------|----------------|--------------|\n| 学校A | 100        | 30             | 30 %         |\n| 学校B | 5          | 2              | 40 %         |\n\nこの場合，学校Bでは，合格者数が少し変動しただけで難関校合格率が大きく変化してしまうため，学校Aの難関校合格率と比べて精度が低いと考えられます． このような状況で，難関校合格率ランキングを作ると，難関校合格率の真値は必ずしも高くないがたまたま合格者数が多かった総受験者数の少ない学校等が上位に順位付けされることとなります． こうした現象は，今後の難関校合格率を予想する場合等に問題となりえます．\n\n以下では，こうした複数地域・店舗・学校等のデータの観測値のみを用いて割合データの平滑化を行う方法について説明します．\n\n## ベイズの定理を用いた平滑化\n\nカウントデータがポアソン分布，割合の真値がポアソン分布の共役事前分布であるガンマ分布に従うと仮定します．\n\n$$\n\\begin{align}\n  \\theta &\\sim \\text{Gamma}(\\alpha, \\beta) \\\\\n  n \\mid \\theta &\\sim \\text{Poisson}(N \\theta)\n\\end{align}\n$$\n\nすると，ベイズの定理を用いて，$\\theta$の事後分布，すなわち観測値$n$が与えられたときの$\\theta$の分布は以下のようになります．\n\n$$\n\\begin{align}\n  P(\\theta \\mid n) &\\propto P(n \\mid \\theta) P(\\theta) \\\\\n  &\\propto (N \\theta)^n \\exp(-N \\theta) \\cdot \\theta^{\\alpha - 1} \\exp(-\\beta\\theta) \\\\\n  &\\propto \\theta^{n + \\alpha - 1} \\exp[-(N + \\beta)\\theta] \\\\\n  \\theta \\mid n &\\sim \\text{Gamma}(n + \\alpha, N + \\beta)\n\\end{align}\n$$\n\nそのため，$\\theta$の事後分布の期待値は以下のような簡単な式で表され，この式を用いることで，観測ノイズを除去（平滑化）することができます．\n\n$$\n\\text{E}[\\theta \\mid n] = \\frac{n + \\alpha}{N + \\beta}\n$$\n\n一方で，こうした平滑化を行うためには，$\\alpha$と$\\beta$の値を決める必要があります． 以下では，事前分布のパラメータ$\\alpha$と$\\beta$を観測値から推定する方法について説明します．\n\n## 経験ベイズ法による事前分布のパラメータ推定\n\n経験ベイズ法は，観測値から事前分布のパラメータを（経験的に）推定する方法です． 経験ベイズ法における事前分布のパラメータの推定方法として，モーメント法や最尤法を用いる方法が考えられますが，以下では，最尤法を用いた方法について説明します．\n\n最尤法を行うにあたって，事前に$n$が従う分布を確かめておきましょう． $n$は，以下のようなガンマ分布とポアソン分布の混合分布に従うと考えられます． 通常，混合分布を求めるには積分計算が必要となってしまいますが，ガンマ分布とポアソン分布の混合分布は，負の二項分布に従うことが知られています． そのため，あらかじめ以下のように$n$の確率分布を求めておきます．\n\n$$\n\\begin{align}\n  P(n) &= \\int_{0}^{\\infty} P(n \\mid \\theta) P(\\theta) d\\theta \\\\\n  &= \\int_{0}^{\\infty} \\frac{1}{n!} (N \\theta)^n \\exp(-N \\theta) \\cdot \\frac{\\beta^{\\alpha}}{\\Gamma(\\alpha)} \\theta^{\\alpha - 1} \\exp(-\\beta\\theta) d\\theta \\\\\n  &= \\frac{N^n \\beta^{\\alpha}}{n! \\Gamma(\\alpha)} \\int_{0}^{\\infty} \\theta^{n + \\alpha - 1} \\exp[-(N + \\beta)\\theta] d\\theta \\\\\n  &= \\frac{N^n \\beta^{\\alpha}}{n! \\Gamma(\\alpha)} \\cdot \\frac{\\Gamma(n + \\alpha)}{(N + \\beta)^{n + \\alpha}} \\quad \\text{(ガンマ分布のカーネルの積分は正規化定数の逆数に等しい)} \\\\\n  &= \\frac{\\Gamma(n + \\alpha)}{\\Gamma(n + 1) \\Gamma(\\alpha)} \\left( \\frac{N}{N + \\beta} \\right)^{n} \\left( \\frac{\\beta}{N + \\beta} \\right)^\\alpha \\\\\n  &= \\binom{n + \\alpha - 1}{n} \\left( \\frac{\\frac{\\alpha}{\\beta} N}{\\frac{\\alpha}{\\beta} N + \\alpha} \\right)^{n} \\left( \\frac{\\alpha}{\\frac{\\alpha}{\\beta} N + \\alpha} \\right)^{\\alpha} \\\\\n\\end{align}\n$$\n\n以上の式より，$n$は以下のような負の二項分布に従うことがわかります． ただし，負の二項分布にはいくつかのパラメータ設定方法があるため注意が必要です． ここでのパラメータ設定方法は，[stanのNegBinomial2](https://mc-stan.org/docs/functions-reference/unbounded_discrete_distributions.html#nbalt)と同様です．\n\n$$\nn \\sim \\text{NegBinomial2}(\\mu, \\alpha), \\quad \\mu = \\frac{\\alpha}{\\beta} N\n$$\n\nこのように，$n$は，負の二項分布と呼ばれる一般的な確率分布に従うことがわかるため，Rで提供されている既存の関数を用いて最尤法を行うことができます． 以下では，実験的に作成したテストデータを対象に，R MASSパッケージの`glm.nb()`関数を用いて最尤法を行い，割合データの平滑化を行ってみます．\n\n## 平滑化の実例\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\ntheme_set(theme_bw())\n```\n:::\n\n\n\n### テストデータの作成\n\nまず，サンプルサイズを10,000とし，割合の真値を$\\alpha = 5, \\beta = 50$のガンマ分布からランダムに生成します．\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\n# サンプルサイズ\nn <- 1e4\n\n# 割合 (真値)\nalpha_true <- 5\nbeta_true <- 50\nrate_true <- rgamma(n, shape = alpha_true, rate = beta_true)\n```\n:::\n\n\n\n割合の真値`rate_true`は以下のような分布を持ちます．\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(rate_true = rate_true) |> \n  ggplot(aes(rate_true)) +\n  geom_histogram(binwidth = 1e-2)\n```\n\n::: {.cell-output-display}\n![](removal-of-observation-noise-from-proportion_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n次に，人口（分母）`population`を1から100までの整数からランダムに選びます． さらに，割合の真値`rate_true`に基づき，ポアソン分布からカウントデータ（分子）`count`を生成し，これらの結果をデータフレーム`data`にまとめます．\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 人口 (分母)\nx <- 1:100\npopulation <- sample(x, n, replace = TRUE)\n\n# カウントデータ (分子)\ncount <- rpois(n, rate_true * population)\n\ndata <- tibble(\n  population = population,\n  rate_true = rate_true,\n  count = count\n)\nhead(data, n = 10)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"population\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"rate_true\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"count\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"50\",\"2\":\"0.04607358\",\"3\":\"5\"},{\"1\":\"1\",\"2\":\"0.10383167\",\"3\":\"0\"},{\"1\":\"22\",\"2\":\"0.10588879\",\"3\":\"5\"},{\"1\":\"7\",\"2\":\"0.06167660\",\"3\":\"1\"},{\"1\":\"94\",\"2\":\"0.11275060\",\"3\":\"11\"},{\"1\":\"29\",\"2\":\"0.06726748\",\"3\":\"2\"},{\"1\":\"62\",\"2\":\"0.13655770\",\"3\":\"9\"},{\"1\":\"63\",\"2\":\"0.06552866\",\"3\":\"2\"},{\"1\":\"76\",\"2\":\"0.07089299\",\"3\":\"7\"},{\"1\":\"45\",\"2\":\"0.03104801\",\"3\":\"0\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n### 少数問題の確認\n\nそれでは，テストデータを用いて，少数問題が発生しているかを確認してみましょう． まずは，割り算を用いた割合の推定値`rate_crude`を計算し，`population`をX軸・`rate_crude`をY軸にとる散布図を描画します． すると，以下のように，`population`が小さい場合に，`rate_crude`が大きくなる傾向がみられることがわかります． もし，手元のデータでも同様の傾向がみられる場合，少数問題が発生している可能性があります．\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_crude <- data |> \n  mutate(\n    rate_crude = count / population\n  )\nhead(data_crude, n = 10)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"population\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"rate_true\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"count\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"rate_crude\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"50\",\"2\":\"0.04607358\",\"3\":\"5\",\"4\":\"0.10000000\"},{\"1\":\"1\",\"2\":\"0.10383167\",\"3\":\"0\",\"4\":\"0.00000000\"},{\"1\":\"22\",\"2\":\"0.10588879\",\"3\":\"5\",\"4\":\"0.22727273\"},{\"1\":\"7\",\"2\":\"0.06167660\",\"3\":\"1\",\"4\":\"0.14285714\"},{\"1\":\"94\",\"2\":\"0.11275060\",\"3\":\"11\",\"4\":\"0.11702128\"},{\"1\":\"29\",\"2\":\"0.06726748\",\"3\":\"2\",\"4\":\"0.06896552\"},{\"1\":\"62\",\"2\":\"0.13655770\",\"3\":\"9\",\"4\":\"0.14516129\"},{\"1\":\"63\",\"2\":\"0.06552866\",\"3\":\"2\",\"4\":\"0.03174603\"},{\"1\":\"76\",\"2\":\"0.07089299\",\"3\":\"7\",\"4\":\"0.09210526\"},{\"1\":\"45\",\"2\":\"0.03104801\",\"3\":\"0\",\"4\":\"0.00000000\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\ndata_crude |> \n  ggplot(aes(population, rate_crude)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](removal-of-observation-noise-from-proportion_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n通常のデータでは割合の真値`rate_true`はわかりませんが，ここでは`rate_true`と`rate_crude`の関係も確認することができます． 以下のように，`rate_true`をX軸・`rate_crude`をY軸にとる散布図を描画すると，`population`が小さい場合に，`rate_crude`が45度線から大きく外れる傾向がみられることがわかります． 以上の結果より，テストデータで少数問題が発生していることが確認できました．\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_crude |> \n  ggplot(aes(rate_true, rate_crude, color = population)) +\n  geom_point() +\n  geom_abline(color = \"red\") +\n  scale_color_viridis_c(option = \"turbo\") +\n  tune::coord_obs_pred()\n```\n\n::: {.cell-output-display}\n![](removal-of-observation-noise-from-proportion_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n## 負の二項分布を用いた平滑化\n\nそれでは，負の二項分布を用いて平滑化を行ってみましょう． ここでは，Rで簡単に利用可能なMASSパッケージの`glm.nb()`関数を用いて，最尤法を行います． `glm.nb()`により，目的変数が負の二項分布に従うような一般化線形モデルを推定することができます．\n\n以下のような簡単なコードで負の二項分布のパラメータ推定ができます． ここでは，期待値が`population`に比例するよう，`log(population)`をオフセット項に指定しています．\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- MASS::glm.nb(\n  count ~ offset(log(population)),\n  data = data\n)\n```\n:::\n\n\n\n次に，`glm.nb()`の出力値を格納した`model`からガンマ分布のパラメータを取得します．\nガンマ分布の$\\alpha$は，`model$theta`で取得できます．\n$\\alpha$の推定値`alpha_estimated`は，真値の`alpha_true`とおおよそ一致することがわかります．\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nalpha_estimated <- model$theta\n\nalpha_true\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n\n```{.r .cell-code}\nalpha_estimated\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5.014545\n```\n\n\n:::\n:::\n\n\n\nまた，ガンマ分布の$\\beta$は，上に示した$\\mu$の関係式より以下で求められます．\n$\\mu$はサンプルサイズの数だけ出力されますが，$\\beta$の推定値`beta_estimated`が全てほぼ同等の値をもち，さらに，真値の`beta_true`とおおよそ一致することがわかります．\n\n$$\n\\beta = \\frac{a N}{\\mu}\n$$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmu <- predict(model, type = \"response\")\nbeta_estimated <- alpha_estimated * population / mu\n\nbeta_true\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 50\n```\n\n\n:::\n\n```{.r .cell-code}\nall(near(beta_estimated, beta_estimated[[1]]))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(beta_estimated)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       1        2        3        4        5        6 \n50.07359 50.07359 50.07359 50.07359 50.07359 50.07359 \n```\n\n\n:::\n:::\n\n\n\nそれでは，最後に求められたガンマ分布の$\\alpha$と$\\beta$を使って割合の平滑化を行ってみましょう． 以下に，平滑化に使用する式を再掲します． この式に従って平滑化した割合`rate_smoothed`を対象に，先ほどと同様のグラフを描画してみます． すると，`population`が小さい場合であっても，割合が過大・過小になる傾向がみられないことがわかり，少数問題が解消されていることが確認できました．\n\n$$\n\\frac{n + \\alpha}{N + \\beta}\n$$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_smoothed <- data |> \n  mutate(\n    rate_smoothed = (count + alpha_estimated) / (population + beta_estimated)\n  )\nhead(data_smoothed, n = 10)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"population\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"rate_true\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"count\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"rate_smoothed\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"50\",\"2\":\"0.04607358\",\"3\":\"5\",\"4\":\"0.10007180\"},{\"1\":\"1\",\"2\":\"0.10383167\",\"3\":\"0\",\"4\":\"0.09818273\"},{\"1\":\"22\",\"2\":\"0.10588879\",\"3\":\"5\",\"4\":\"0.13894887\"},{\"1\":\"7\",\"2\":\"0.06167660\",\"3\":\"1\",\"4\":\"0.10538227\"},{\"1\":\"94\",\"2\":\"0.11275060\",\"3\":\"11\",\"4\":\"0.11115531\"},{\"1\":\"29\",\"2\":\"0.06726748\",\"3\":\"2\",\"4\":\"0.08870907\"},{\"1\":\"62\",\"2\":\"0.13655770\",\"3\":\"9\",\"4\":\"0.12504770\"},{\"1\":\"63\",\"2\":\"0.06552866\",\"3\":\"2\",\"4\":\"0.06203521\"},{\"1\":\"76\",\"2\":\"0.07089299\",\"3\":\"7\",\"4\":\"0.09529787\"},{\"1\":\"45\",\"2\":\"0.03104801\",\"3\":\"0\",\"4\":\"0.05274382\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\ndata_smoothed |>\n  ggplot(aes(population, rate_smoothed)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](removal-of-observation-noise-from-proportion_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\ndata_smoothed |> \n  ggplot(aes(rate_true, rate_smoothed, color = population)) +\n  geom_point() +\n  geom_abline(color = \"red\") +\n  scale_color_viridis_c(option = \"turbo\") +\n  tune::coord_obs_pred()\n```\n\n::: {.cell-output-display}\n![](removal-of-observation-noise-from-proportion_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n:::\n\n\n\n## おわりに\n\nこの記事では，割合データにおける少数問題への対処法として，経験ベイズ法を用いた平滑化手法について説明しました． 分母の人口等が小さい場合に割合データのばらつきが大きくなる現象は，実務でもしばしば問題になると思われます． そうした場合には，何らかのしきい値で分母の小さいデータを除外する方法も考えられますが， この記事で説明した方法を使うと全てのデータを活用できるという利点もあります．\n\nこの記事で用いたMASSパッケージの`glm.nb()`は，一般化線形モデル用の関数であるため，分母にあたる`offset(log(population))`以外の項も説明変数として含むことが可能です． これにより，地域特性等によって$\\beta$が異なる状況を再現できる可能性があります．\n\nまた，汎用性の高いと思われるポアソン分布を対象としましたが，二項分布でも同様の枠組みが利用できます． 二項分布の場合，事前分布としてベータ分布を用いると，平滑化の式は以下のようになります． また，混合分布はベータ・二項分布となるため，既存のRパッケージ（例：bbmle）等を用いれば，比較的簡単にパラメータ推定が可能だと思われます．\n\n$$\n\\frac{n + \\alpha}{N + \\alpha + \\beta}\n$$\n",
    "supporting": [
      "removal-of-observation-noise-from-proportion_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}