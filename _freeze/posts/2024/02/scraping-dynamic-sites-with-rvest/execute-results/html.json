{
  "hash": "ebbe3d4b60cbb846dedc259f9ad17704",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"rvestで動的サイトをスクレイピングする（Seleniumを使わずに）\"\nlang: ja\ncategories: [rvest, R, Japanese]\ndate: \"2024-02-14\"\nformat:\n  html:\n    df-print: paged\nimage: scraping-dynamic-sites-with-rvest/html-view.png\n---\n\n\n## RにおけるWebスクレイピングの課題\n\nWebサイトには，コンテンツが変化しない静的サイトとユーザの行動によってコンテンツが変化する動的サイトがありますが，これまでRでは静的サイトと動的サイトのそれぞれのスクレイピングでパッケージを使い分けることが一般的でした．\n\n静的サイトのスクレイピングではrvestパッケージを用いるのが定番となっていますが，これまでrvestでは検索やログインなどが必要な動的サイトを扱うことができませんでした．\n\n動的サイトのスクレイピングでは，rvestに加えてRSeleniumやchromoteなどの他のパッケージを組み合わせる必要がありました．特に，これまでRSeleniumが用いられることが多かったと思われますが，Seleniumは事前にドライバをインストールする必要があるなど環境構築が面倒であるという課題がありました．\n\n## rvest 1.0.4で追加された`read_html_live()`\n\nrvest 1.0.4では動的サイトのスクレイピングを可能とする`read_html_live()`が追加されました． `read_html_live()`は，chromoteパッケージを用いることで，rvestで動的サイトのスクレイピングを可能とするものです[^1]．\n\n[^1]: https://joshuamccrain.com/tutorials/web_scraping_R_selenium.html\n\n`read_html_live()`を用いることで，`$click()`や`$type()`などのメソッドを用いた動的サイトの操作が可能となるだけでなく，`html_elements()`や`html_attr()`などの一般的なrvestの関数をシームレスに呼ぶことができるようになります．\n\n## `read_html_live()`の使い方\n\nここでは，[こちらのRSeleniumのチュートリアル](https://joshuamccrain.com/tutorials/web_scraping_R_selenium.html)で紹介されているものと同じ処理を`read_html_live()`で行ってみましょう．\n\nこちらのチュートリアルでは，アメリカの郵便番号（ZIP code）から地元テレビ局の情報をスクレイピングしています．\n\nRSeleniumでのサイトのアクセスは，`read_html_live()`を使って以下のように書き換えられます．\n\n``` r\n# RSelenium\n# Source: https://joshuamccrain.com/tutorials/web_scraping_R_selenium.html\nlibrary(RSelenium)\n\nrD <- rsDriver(browser=\"firefox\", port=4545L, verbose=F)\nremDr <- rD[[\"client\"]]\nremDr$navigate(\"https://www.fcc.gov/media/engineering/dtvmaps\")\n```\n\n⏬\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# rvest\nlibrary(rvest)\nlibrary(tidyverse)\n\nhtml <- read_html_live(\"https://www.fcc.gov/media/engineering/dtvmaps\")\n```\n:::\n\n\n読み込まれたオブジェクトは，`$view()`でブラウザで確認することができます．\nCtrl+Shift+Cでサイト上のエレメントを選択したのち，該当箇所を右クリック⏩Copy⏩Copy selectorでCSSセレクタをコピーすれば，`$type()`や`$click()`の引数として使うことができます．\n\n``` r\n# rvest\nhtml$view()\n```\n\n![](scraping-dynamic-sites-with-rvest/html-view.png)\n\n次に，中央のフォームに郵便番号（ZIP code）を入力しGo!ボタンをクリックするコードは以下のように書き換えられます．\n\n``` r\n# RSelenium\n# Source: https://joshuamccrain.com/tutorials/web_scraping_R_selenium.html\nzip <- \"30308\"\nremDr$findElement(using = \"id\", value = \"startpoint\")$sendKeysToElement(list(zip))\nremDr$findElements(\"id\", \"btnSub\")[[1]]$clickElement()\n```\n\n⏬\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# rvest\nzip <- \"30308\"\nhtml$type(\"#startpoint\", zip)\nhtml$click(\"#btnSub\")\n```\n:::\n\n\n最後に，[こちらのRSeleniumのチュートリアル](https://joshuamccrain.com/tutorials/web_scraping_R_selenium.html)と同じデータが取得できたことを確認しましょう．\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhtml |> \n  html_elements(\"table.tbl_mapReception\") |> \n  chuck(3) |> \n  html_table() |> \n  select(!c(1, IA)) |> \n  rename_with(str_to_lower) |> \n  rename(ch_num = `ch#`) |> \n  slice_tail(n = -1) |> \n  filter(callsign != \"\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"callsign\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"network\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"ch_num\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"band\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"WXIA-TV\",\"2\":\"NBC\",\"3\":\"11\",\"4\":\"Hi-V\"},{\"1\":\"WSB-TV\",\"2\":\"ABC\",\"3\":\"2\",\"4\":\"UHF\"},{\"1\":\"WUVG-DT\",\"2\":\"UNIV\",\"3\":\"34\",\"4\":\"UHF\"},{\"1\":\"WHSG-TV\",\"2\":\"TRIN\",\"3\":\"63\",\"4\":\"UHF\"},{\"1\":\"WAGA-TV\",\"2\":\"FOX\",\"3\":\"5\",\"4\":\"UHF\"},{\"1\":\"WANF\",\"2\":\"CBS\",\"3\":\"46\",\"4\":\"UHF\"},{\"1\":\"WUPA\",\"2\":\"THE\",\"3\":\"69\",\"4\":\"UHF\"},{\"1\":\"WPCH-TV\",\"2\":\"IND\",\"3\":\"17\",\"4\":\"UHF\"},{\"1\":\"WATL\",\"2\":\"MY N\",\"3\":\"36\",\"4\":\"UHF\"},{\"1\":\"WIRE-CD\",\"2\":\"\",\"3\":\"\",\"4\":\"UHF\"},{\"1\":\"WABE-TV\",\"2\":\"PBS\",\"3\":\"30\",\"4\":\"UHF\"},{\"1\":\"WATC-DT\",\"2\":\"ETV\",\"3\":\"57\",\"4\":\"UHF\"},{\"1\":\"WYGA-CD\",\"2\":\"\",\"3\":\"\",\"4\":\"UHF\"},{\"1\":\"WGTV\",\"2\":\"PBS\",\"3\":\"8\",\"4\":\"Hi-V\"},{\"1\":\"WANN-CD\",\"2\":\"\",\"3\":\"\",\"4\":\"UHF\"},{\"1\":\"WPXA-TV\",\"2\":\"ION\",\"3\":\"14\",\"4\":\"UHF\"},{\"1\":\"WKTB-CD\",\"2\":\"\",\"3\":\"\",\"4\":\"UHF\"},{\"1\":\"WSKC-CD\",\"2\":\"\",\"3\":\"\",\"4\":\"UHF\"},{\"1\":\"WNGH-TV\",\"2\":\"PBS\",\"3\":\"18\",\"4\":\"Lo-V\"},{\"1\":\"WJSP-TV\",\"2\":\"PBS\",\"3\":\"28\",\"4\":\"Lo-V\"},{\"1\":\"WCIQ\",\"2\":\"PBS\",\"3\":\"7\",\"4\":\"Hi-V\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## まとめ\n\n以上のようにrvest 1.0.4で追加された`read_html_live()`を使うことで，rvestだけでシームレスに静的サイトと動的サイトのスクレイピングが可能となるだけでなく，RSeleniumと比べて簡単なコードでブラウザ上の操作を再現することができることがわかりました．",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}