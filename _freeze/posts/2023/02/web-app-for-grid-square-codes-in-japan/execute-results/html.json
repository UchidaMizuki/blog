{
  "hash": "5f88ab001db522115a3fb3f606490258",
  "result": {
    "markdown": "---\ntitle: \"地域メッシュデータのためのWEBアプリをつくりました（R Shiny&jpgrid）\"\nlang: ja\ndate: \"2023-02-16\"\ncategories: [Shiny, jpgrid, R, Japanese]\nimage: images/grid_city.png\n---\n\n\n## このアプリについて\n\n[R Shiny](https://shiny.rstudio.com)を使って[地域メッシュデータを使うためのWEBアプリ](https://uchidamizuki.shinyapps.io/jpgrid-app/)をつくってみました．\n\n[地域メッシュ](https://www.stat.go.jp/data/mesh/m_tuite.html)とは，経度・緯度にもとづいて（日本の）地域をほぼ正方形のメッシュに分割したもので，統計データの集計区分としてよく利用されています．\n\n今回つくったアプリは，Rパッケージの[jpgrid](https://uchidamizuki.github.io/jpgrid/)パッケージの機能の一部を提供しています． このアプリの提供機能は以下の通りです．\n\n1.  市区町村別の地域メッシュデータ生成\n2.  メッシュ文字列を含む表データから地域メッシュデータ生成\n3.  経度・緯度を含む表データから地域メッシュデータ生成\n\n[![アプリの外観（クリックするとアプリが開きます）](/posts/2023/02/images/about.png)](https://uchidamizuki.shinyapps.io/jpgrid-app/)\n\n## アプリの提供機能について\n\n### 市区町村別の地域メッシュデータ生成\n\n総務省統計局の公開する[市区町村別メッシュ・コード一覧](市区町村別メッシュ・コード一覧 \"https://www.stat.go.jp/data/mesh/m_itiran.html\")から市区町村別のメッシュを取得します．\n\n以下のような手順で市区町村別のメッシュを生成・保存できます．\n\n1.  都道府県を選択（複数選択可）\n2.  市区町村を選択（複数選択可）\n3.  メッシュサイズ（1 km／10 km／80 kmのいずれか）を選択し「メッシュ表示」を押す\n4.  データ形式（GeoPackageまたはCSV）を選択し「ダウンロード」を押す\n\n![市区町村別メッシュの表示イメージ](images/grid_city.png)\n\njpgridパッケージでは，`grid_city` データで市区町村別メッシュデータが提供されています．\n\n以下のように，市区町村別メッシュデータを図示することができます．\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(jpgrid)\nlibrary(tidyverse)\n\nJGD2011 <- 6668\n\ngrid_city |> \n  filter(city_name_ja %in% c(\"千葉市中央区\", \"千葉市花見川区\", \"千葉市稲毛区\")) |> \n  grid_as_sf(crs = 6668) |> \n  ggplot(aes(fill = city_name_ja)) +\n  geom_sf() +\n  scale_fill_brewer(palette = \"Set2\")\n```\n\n::: {.cell-output-display}\n![](web-app-for-grid-square-codes-in-japan_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n### メッシュ文字列を含む表データから地域メッシュデータ生成\n\n以下のような手順でメッシュ文字列を含む表データから地域メッシュを生成・保存できます．\n\n1.  データを選択（CSVまたはExcel）\n2.  メッシュ文字列の列名を指定（地点IDも指定可能）し「メッシュ表示」を押す\n3.  データ形式（GeoPackageまたはCSV）を選択し「ダウンロード」を押す\n\njpgridパッケージでは，`parse_grid()` で文字列から地域メッシュを生成することができます．\n\n\n::: {.cell}\n\n:::\n\n\n![](images/parse_grid.png)\n\n### 経度・緯度を含む表データから地域メッシュデータ生成\n\n同様に，以下の手順で経度・緯度を含む表データから地域メッシュを生成・保存できます．\n\n1.  データを選択（CSVまたはExcel）\n2.  経度（X）・緯度（Y）の列名を指定（地点IDも指定可能）し「メッシュ表示」を押す\n3.  データ形式（GeoPackageまたはCSV）を選択し「ダウンロード」を押す\n\njpgridパッケージでは，`coords_to_grid()` で文字列から地域メッシュを生成することができます．\n\n![](images/coords_to_grid.png)\n\n## おわりに\n\nR Shinyで作成した地域メッシュデータのためのWEBアプリについて紹介しました．\n\nWEBアプリの作成に利用したjpgridパッケージでは，このアプリで提供していない様々な機能が提供されています．詳しくは，[こちら](こちら \"https://uchidamizuki.github.io/jpgrid/\")をご覧ください．\n\n例として，ジオメトリをメッシュに変換する`geometry_to_grid()` などがあります．\n\nぜひ地域メッシュデータの分析にjpgridパッケージも活用してみてください．\n\n\n::: {.cell}\n\n```{.r .cell-code}\njapan <- rnaturalearth::ne_countries(country = \"japan\",\n                                     scale = \"medium\",\n                                     returnclass = \"sf\")\ngrid_japan <- japan |> \n  geometry_to_grid(\"80km\") |> \n  dplyr::first() |> \n  grid_as_sf(crs = sf::st_crs(japan))\n\njapan |> \n  ggplot() +\n  geom_sf() +\n  geom_sf(data = grid_japan,\n          fill = \"transparent\")\n```\n\n::: {.cell-output-display}\n![](web-app-for-grid-square-codes-in-japan_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "web-app-for-grid-square-codes-in-japan_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}