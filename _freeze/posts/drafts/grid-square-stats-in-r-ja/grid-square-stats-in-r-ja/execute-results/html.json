{
  "hash": "6db737d25513715fdb2df63711f5efc2",
  "result": {
    "markdown": "---\ntitle: \"Rで地域メッシュ統計（jpgridパッケージ）\"\nlang: ja\ndate: \"2022-06-04\"\ncategories: [grid-square-stats, jpgrid, R, Japanese]\nfig-align: center\nimage: station_main_grid500m.png\ndraft: true\n---\n\n\n**地域メッシュ**（**Grid Squares**）とは「**緯度・経度に基づいて日本の国土をほぼ正方形の区画に分割したもの**」で，約80 km四方～約100 m四方など様々な大きさのメッシュに対してそれぞれメッシュコードが割り振られています．\n\nこれらのメッシュコードに統計データを対応させたデータは[地域メッシュ統計](https://www.stat.go.jp/data/mesh/index.html)と呼ばれています．\n\nここでは，地域メッシュを扱うためのRパッケージである[jpgrid](https://github.com/UchidaMizuki/jpgrid)のサンプルコードを紹介します．\n\n使用したサンプルデータは，[こちら](https://github.com/UchidaMizuki/blog-grid-square-stats-in-r)からダウンロードできます．\n\n## 東京の主要駅周辺のメッシュ人口\n\n東京の主要駅周辺のメッシュ人口を図示してみましょう．ここでは，駅の位置データ（`station_5339_2019.gpkg`）と500 mメッシュ人口データ（`pop_grid500m_5339_2015`）を利用します．\n\n［データ出典］\n\n-   `station_5339_2019.gpkg`：[国土数値情報の2019年鉄道データ](https://nlftp.mlit.go.jp/ksj/gml/datalist/KsjTmplt-N02-v2_3.html)より作成（80 kmメッシュ：5339のみ）\n\n-   `pop_grid500m_5339_2015.parquet`：[地図で見る統計の2015年国勢調査の4次メッシュデータ](https://www.e-stat.go.jp/gis/statmap-search?page=5&type=1&toukeiCode=00200521&toukeiYear=2015&aggregateUnit=H&serveyId=H002005112015&statsId=T000847)より作成\n\n### 駅の位置データ\n\n`station_5339_2019.gpkg` には東京都近辺（80 kmメッシュ：5339）の2019年の駅データが格納されています．\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# pak::pak(\"UchidaMizuki/jpgrid\")\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(arrow)\nlibrary(jpgrid)\n\n# crs\nWGS84 <- 4326\n\n# ggspatial\nannotation_map_tile <- function(zoomin = -1, \n                                progress = \"none\", ...) {\n  list(ggspatial::annotation_map_tile(zoomin = zoomin, \n                                      progress = progress, ...),\n       labs(caption = \"© OpenStreetMap contributors\"))\n}\n\nstation <- read_sf(\"station_5339_2019.gpkg\")\n\nggplot(station,\n       aes(color = line)) +\n  annotation_map_tile() +\n  geom_sf(show.legend = FALSE) +\n  scale_color_viridis_d(option = \"turbo\")\n```\n\n::: {.cell-output-display}\n![](grid-square-stats-in-r-ja_files/figure-html/station-1.png){width=672}\n:::\n:::\n\n\n### 東京主要駅の500 mメッシュ駅勢圏の作成\n\n東京の主要駅である新宿駅・渋谷駅・池袋駅・東京駅の4つの駅に対して，500 mメッシュで駅勢圏を作成してみます．ここでは，駅の代表点から約1.5 kmを駅勢圏とします．\n\njpgridでは，`geometry_to_grid()` で**sfパッケージのジオメトリをメッシュコードに変換**することができます．また，逆に，`grid_as_sf()` で**メッシュコードを持つデータフレームをsfパッケージのジオメトリデータに変換**することもできます．\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# # 駅勢圏の距離\n# dist_station <- units::set_units(1.5, km)\n# \n# # 主要駅の代表点を中心とする駅勢圏ジオメトリ\n# station_main <- station |>\n#   filter(station %in% c(\"新宿\", \"渋谷\", \"池袋\", \"東京\")) |>\n#   group_by(station = as_factor(station)) |>\n#   summarise(.groups = \"drop\") |>\n#   \n#   # 重心点を作成\n#   st_centroid() |>\n#   \n#   # 重心点を中心とする円を作成\n#   st_buffer(dist_station)\n# \n# # 駅勢圏の500 mメッシュデータ\n# station_main_grid500m <- station_main |>\n#   mutate(grid500m = geom |>\n#            \n#            # sfジオメトリ -> 500 mメッシュ\n#            geometry_to_grid(\"500m\")) |>\n#   st_drop_geometry() |>\n#   unnest(grid500m) |>\n#   \n#   # 500 mメッシュ -> sfジオメトリ\n#   grid_as_sf(crs = WGS84)\n# \n# ggplot(station_main,\n#        aes(fill = station,\n#            label = station)) +\n#   annotation_map_tile() +\n#   geom_sf(data = station_main_grid500m,\n#           alpha = 0.5) +\n#   geom_sf(fill = \"transparent\",\n#           linetype = \"dashed\") +\n#   geom_sf_text() +\n#   scale_fill_brewer(palette = \"Set2\") +\n#   theme(legend.position = \"none\")\n```\n:::\n\n\n## 東京主要駅の駅勢圏におけるメッシュ人口\n\n東京の主要駅の駅勢圏における2015年のメッシュ人口（`pop_grid500m_5339_2015.parquet`）を図示してみます．`grid_500m()` などの関数を用いることで文字列のメッシュコード（`\"533900054\"`など）をjpgridのメッシュコードに変換できます．\n\nグラフより以下のことが確認できました．\n\n-   4つの駅の駅勢圏人口は池袋駅で最も多く東京駅で最も少ない\n\n-   駅や皇居・公園などの周辺で人口が少ないことが地図からも確認できる\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# # 500 mメッシュ人口\n# pop_grid500m <- read_parquet(\"pop_grid500m_5339_2015.parquet\") |> \n#   mutate(grid500m = grid_500m(grid500m))\n# \n# # 500 mメッシュ駅勢圏データに人口を付与\n# station_main_grid500m <- station_main_grid500m |> \n#   left_join(pop_grid500m,\n#             by = \"grid500m\") |> \n#   replace_na(list(pop = 0))\n# \n# limits <- c(0, max(station_main_grid500m$pop))\n# \n# station_main_grid500m |> \n#   group_by(station) |> \n#   group_map(~ {\n#     ggplot(.x,\n#            aes(fill = pop)) +\n#       annotation_map_tile() +\n#       geom_sf(alpha = 0.5) +\n#       scale_fill_viridis_c(\"人口\",\n#                            limits = limits,\n#                            option = \"turbo\") +\n#       ggtitle(.y$station) +\n#       theme(plot.title = element_text(hjust = 0.5),\n#             axis.text = element_blank())\n#   }) |> \n#   patchwork::wrap_plots() +\n#   patchwork::plot_layout(guides = \"collect\")\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# station_main_grid500m |> \n#   st_drop_geometry() |> \n#   group_by(station) |> \n#   summarise(pop = sum(pop)) |> \n#   ggplot(aes(station, pop)) +\n#   geom_col(aes(fill = station),\n#            show.legend = FALSE) +\n#   geom_text(aes(label = scales::label_comma(suffix = \"人\")(pop)),\n#             vjust = 2) +\n#   scale_x_discrete(\"東京の主要駅\") +\n#   scale_y_continuous(\"駅勢圏メッシュ人口 [千人]\",\n#                      labels = scales::label_comma(scale = 1e-3)) +\n#   scale_fill_brewer(palette = \"Set2\")\n```\n:::\n\n\n## まとめ\n\nRパッケージのjpgridによる地域メッシュ統計のサンプルコードを紹介しました．\n\njpgridを使うことで，**緯度経度やジオメトリのデータを簡単に地域メッシュ統計と紐づけられます**．皆さんもぜひ使ってみてください．\n",
    "supporting": [
      "grid-square-stats-in-r-ja_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}