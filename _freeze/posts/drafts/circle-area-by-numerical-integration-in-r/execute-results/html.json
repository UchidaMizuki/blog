{
  "hash": "4353dc4ac38fc9044af981b43d7509cb",
  "result": {
    "markdown": "---\ntitle: \"Rの数値積分で円の面積を求める\"\nlang: ja\ncategories: [AIC, R, Japanese]\ndate: \"2023-09-10\"\ndraft: true\n---\n\n\n## はじめに\n\n最近，R statsパッケージ[^1]の`integrate()` 関数で一次元関数の数値積分ができることを知りました．そこで，この記事では，[こちらの記事](https://mathwords.net/enmensekibun)を参考に積分で円の面積を計算してみました．\n\n[^1]: statsパッケージは，Rにデフォルトで入っているパッケージの一つです．\n\n## 半円を描く関数\n\n半径$r$の半円を描く関数は @eq-semicircle と表せます．Rで書くと`semicircle()` 関数のようになります．\n\n$$\ny = \\sqrt{r^2 - x^2} \\qquad (-r \\le x \\le r)\n$$ {#eq-semicircle}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsemicircle <- function(x, radius) {\n  sqrt(radius^2 - x^2)\n}\n```\n:::\n\n\n実装した`semicircle()` 関数で半径$r = 5$の半円を描いてみましょう．\n\n\n::: {.cell}\n\n```{.r .cell-code}\nradius <- 5\ncurve(semicircle(x, radius), -radius, radius,\n      asp = 1) # アスペクト比を1:1にする\n```\n\n::: {.cell-output-display}\n![](circle-area-by-numerical-integration-in-r_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n## 数値積分で円の面積を求める\n\n次に，`stats::integrate()` 関数を用いて，さきほど書いた`semicircle()` を数値積分してみましょう．半径$r = 5$の場合，積分すると半円の面積$\\frac{1}{2}\\pi r^2$とほぼ等しくなることが確認できます．\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 半径を5とする\nradius <- 5\nintegrate(semicircle, -radius, radius, # -radiusからradiusまでの範囲で積分する\n          radius = radius)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n39.26991 with absolute error < 2.5e-08\n```\n:::\n\n```{.r .cell-code}\npi * 5^2 / 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 39.26991\n```\n:::\n:::\n\n\nそのため，円の面積を近似的に求める`circle_area_approx()`が以下のように書けます（数値積分の結果は，`stats::integrate()` 関数の戻り値の`value` に格納されています）．\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncircle_area_approx <- function(radius) {\n  out <- integrate(semicircle, -radius, radius,\n                   radius = radius)\n  out$value * 2\n}\n\ncircle_area_approx(5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 78.53982\n```\n:::\n:::\n\n\n最後に，半径$1 \\le r \\le 10$の範囲で近似値`circle_area_approx()`と理論値`circle_area_true()`（$\\pi r^2$）を比較してみましょう．\n\n計算の結果，近似値と理論値で円の面積がほぼ等しいことが確認できました．\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncircle_area_true <- function(radius) {\n  pi * radius ^ 2\n}\n\ndata <- data.frame(radius = 1:10)\ndata$circle_area_approx <- sapply(data$radius, circle_area_approx)\ndata$circle_area_true <- sapply(data$radius, circle_area_true)\nknitr::kable(data)\n```\n\n::: {.cell-output-display}\n| radius| circle_area_approx| circle_area_true|\n|------:|------------------:|----------------:|\n|      1|           3.141593|         3.141593|\n|      2|          12.566371|        12.566371|\n|      3|          28.274334|        28.274334|\n|      4|          50.265482|        50.265482|\n|      5|          78.539816|        78.539816|\n|      6|         113.097335|       113.097335|\n|      7|         153.938040|       153.938040|\n|      8|         201.061930|       201.061930|\n|      9|         254.469005|       254.469005|\n|     10|         314.159265|       314.159265|\n:::\n:::\n\n\n## おわりに\n\n`stats::integrate()` 関数を使えば，簡単に一次元関数の数値積分ができることがわかりました．\n\n### 注意点\n\n`stats::integrate()` 関数では，$-\\infty \\le x \\le \\infty$の範囲での数値積分も可能ですが，$10^{-6} \\le x \\le 10^6$のような大きな値を代入すると数値積分が適切に行われませんのでご注意ください．\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# OK\nintegrate(dnorm, -Inf, Inf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n1 with absolute error < 9.4e-05\n```\n:::\n\n```{.r .cell-code}\n# NG\nintegrate(dnorm, -1e6, 1e6)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n0 with absolute error < 0\n```\n:::\n:::\n",
    "supporting": [
      "circle-area-by-numerical-integration-in-r_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}