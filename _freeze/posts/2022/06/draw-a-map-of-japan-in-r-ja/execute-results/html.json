{
  "hash": "8317e9dfe830550d77c4c97d8cf380ad",
  "result": {
    "markdown": "---\ntitle: \"Rで日本地図を描いてみよう\"\nlang: ja\ndate: \"2022-06-11\"\ncategories: [ggplot2, sf, jpmap, R, Japanese]\nfig-align: center\nout-width: 100%\nimage: foreigner_ratio_2015.png\n---\n\n\nRでは，ggplot2などのパッケージを利用するだけで，きれいな日本地図（都道府県別）を描くことができます．\n\nここでは，日本地図をggplot2で描画する方法をいくつか紹介します．\n\n## 地図描画用のサンプルデータ\n\nここでは，[こちら](https://www.e-stat.go.jp/dbview?sid=0000010201)からダウンロードできる社会・人口統計体系の2015年の都道府県別外国人人口比率データ（10万人あたり外国人人口）を地図描画用のサンプルデータとしました．\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"パッケージの読み込み\"}\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"データのダウンロード\"}\nlibrary(jpstat)\nlibrary(arrow)\n\nappId <- keyring::key_get(\"estat-api\")\nforeigner_ratio_2015 <- estat(appId, \"https://www.e-stat.go.jp/en/dbview?sid=0000010201\",\n                              lang = \"E\")\nforeigner_ratio_2015 <- foreigner_ratio_2015 |> \n  activate(tab) |> \n  select() |> \n  \n  activate(cat01) |> \n  # Ratio of population of foreigners (per 100,000 persons)\n  filter(code == \"#A01601\") |> \n  select() |> \n  \n  activate(area) |> \n  filter(name != \"All Japan\") |> \n  select(code, name) |> \n  rekey(\"pref\") |> \n  \n  activate(time) |> \n  filter(name == \"2015\") |> \n  select()\nforeigner_ratio_2015 <- foreigner_ratio_2015 |> \n  collect(\"foreigners_per_100K\")\n\nwrite_parquet(foreigner_ratio_2015, \"foreigner_ratio_2015.parquet\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"データの読み込み\"}\nlibrary(arrow)\n\nforeigner_ratio_2015 <- read_parquet(\"foreigner_ratio_2015.parquet\") |> \n  mutate(pref_code = pref_code |> \n           str_extract(\"^\\\\d{2}\") |> \n           parse_integer(),\n         \n         pref_name = pref_name |> \n           str_remove(\"-.+$\"),\n         pref_name = case_when(pref_name == \"Gumma\" ~ \"Gunma\",\n                               TRUE ~ pref_name),\n         \n         foreigner_ratio = parse_number(foreigners_per_100K) / 1e5,\n         .keep = \"unused\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nforeigner_ratio_2015\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 47 × 3\n   pref_code pref_name foreigner_ratio\n       <int> <chr>               <dbl>\n 1         1 Hokkaido          0.00403\n 2         2 Aomori            0.00264\n 3         3 Iwate             0.00392\n 4         4 Miyagi            0.00599\n 5         5 Akita             0.00285\n 6         6 Yamagata          0.00490\n 7         7 Fukushima         0.00456\n 8         8 Ibaraki           0.0142 \n 9         9 Tochigi           0.0134 \n10        10 Gunma             0.0188 \n# ℹ 37 more rows\n```\n:::\n:::\n\n\n## `geom_map()` を使って日本地図を描く\n\nggplot2では，`map_data()` や`geom_map()` を使うことで，世界の国々を描画することができます．これには，mapsパッケージを予めダウンロードする必要があります．また，日本地図を利用するには，mapsパッケージに加えて，mapdataパッケージが必要になります．\n\n`map_data(\"japan\")` とすることで，mapsパッケージの地図データがデータフレームに変換されます．このデータフレームの`region` 列が都道府県のIDとなるため，`aes(map_id = region)`を設定した上で，`geom_map()` することで，描画したいデータの`region` 列と都道府県ジオメトリがリンクします．\n\nただし，`map_data(\"japan\")` は，以下の点に注意が必要です．\n\n-   `region` 列はすべてアルファベット表記である\n\n-   他の都道府県と違い，奈良県だけがが`NARA` と大文字表記になっているなど，元データに問題あり\n\n    -   ここでは，`str_to_title()`で修正\n\nまた，日本地図全体を表示するためには，`expand_limits()` などで軸を設定すること必要になります．\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# pak::pak(\"maps\")\n# pak::pak(\"mapdata\")\nlibrary(tidyverse)\nlibrary(mapdata)\n\nmap_data_japan <- map_data(\"japan\") |> \n  as_tibble() |> \n  mutate(region = str_to_title(region))\nmap_data_japan\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 46,975 × 6\n    long   lat group order region   subregion\n   <dbl> <dbl> <dbl> <int> <chr>    <chr>    \n 1  140.  42.3     1     1 Hokkaido <NA>     \n 2  140.  42.3     1     2 Hokkaido <NA>     \n 3  140.  42.3     1     3 Hokkaido <NA>     \n 4  140.  42.3     1     4 Hokkaido <NA>     \n 5  140.  42.3     1     5 Hokkaido <NA>     \n 6  140.  42.3     1     6 Hokkaido <NA>     \n 7  140.  42.3     1     7 Hokkaido <NA>     \n 8  140.  42.3     1     8 Hokkaido <NA>     \n 9  140.  42.3     1     9 Hokkaido <NA>     \n10  140.  42.3     1    10 Hokkaido <NA>     \n# ℹ 46,965 more rows\n```\n:::\n\n```{.r .cell-code}\nggplot(foreigner_ratio_2015 |> \n         rename(region = pref_name),\n       aes(map_id = region)) +\n  geom_map(aes(fill = foreigner_ratio),\n           map = map_data_japan) +\n  expand_limits(x = map_data_japan$long,\n                y = map_data_japan$lat) +\n  scale_fill_viridis_c(\"外国人人口比率\",\n                       limits = c(0, 0.03),\n                       labels = scales::label_percent(),\n                       option = \"turbo\")\n```\n\n::: {.cell-output-display}\n![](draw-a-map-of-japan-in-r-ja_files/figure-html/geom_map-1.png){width=672}\n:::\n:::\n\n\n## sfパッケージを使って日本地図を描く\n\n最近では，sfパッケージのジオメトリがggplot2で簡単に描画できるようになっています．\n\nまた，maps・mapdataパッケージの提供する地図データは，sfパッケージの`st_as_sf()` でsfのジオメトリデータに変換することができます．\n\n日本地図データをsfに変換することで，先ほどよりも直感的に地図を描くことができます．\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\n\nmap_japan <- maps::map(\"japan\", \n                       plot = FALSE,\n                       fill = TRUE) |> \n  st_as_sf() |> \n  rename(pref_name = ID) |> \n  mutate(pref_name = str_to_title(pref_name))\n\nmap_japan |> \n  left_join(foreigner_ratio_2015,\n            by = \"pref_name\") |> \n  ggplot(aes(fill = foreigner_ratio)) +\n  geom_sf(color = \"transparent\") +\n  scale_fill_viridis_c(\"外国人人口比率\",\n                       limits = c(0, 0.03),\n                       labels = scales::label_percent(),\n                       option = \"turbo\")\n```\n\n::: {.cell-output-display}\n![](draw-a-map-of-japan-in-r-ja_files/figure-html/sf-1.png){width=672}\n:::\n:::\n\n\n## もっと簡単に日本地図を描く\n\n[jpmap](https://github.com/UchidaMizuki/jpmap)は，ggplot2による日本地図の描画をより簡単にするためのパッケージです．\n\njpmapは，以下の2つの機能を持ちます．\n\n-   日本語の都道府県名や都道府県コードが含む都道府県データを提供（`jpmap::prefecture`）\n\n-   琉球諸島・小笠原諸島を再配置したレイアウトを可能に（`jpmap::layout_islands()`）\n\n`jpmap::layout_islands()` で地図のレイアウトを変更することで，都道府県ごとの傾向がよりわかりやすくなります．\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# pak::pak(\"UchidaMizuki/jpmap\")\njpmap::prefecture\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 47 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 122.9382 ymin: 24.2121 xmax: 153.9856 ymax: 45.52041\nGeodetic CRS:  JGD2011\n# A tibble: 47 × 4\n   pref_code pref_name pref_name_ja                                     geometry\n       <int> <chr>     <chr>                                  <MULTIPOLYGON [°]>\n 1         1 Hokkaido  北海道       (((143.8965 44.15815, 143.9118 44.15229, 14…\n 2         2 Aomori    青森県       (((139.9438 40.42928, 139.9426 40.43439, 13…\n 3         3 Iwate     岩手県       (((141.681 40.45101, 141.6909 40.44229, 141…\n 4         4 Miyagi    宮城県       (((141.6403 38.9675, 141.6406 38.9652, 141.…\n 5         5 Akita     秋田県       (((139.8809 39.11511, 139.8919 39.13321, 13…\n 6         6 Yamagata  山形県       (((139.5487 38.545, 139.5801 38.60688, 139.…\n 7         7 Fukushima 福島県       (((140.9332 37.8898, 140.9334 37.88923, 140…\n 8         8 Ibaraki   茨城県       (((140.7973 36.84649, 140.7931 36.83755, 14…\n 9         9 Tochigi   栃木県       (((139.6537 36.20314, 139.6385 36.22575, 13…\n10        10 Gunma     群馬県       (((138.6795 36.73065, 138.7227 36.74918, 13…\n# ℹ 37 more rows\n```\n:::\n\n```{.r .cell-code}\nplot <- jpmap::prefecture |> \n  left_join(foreigner_ratio_2015,\n            by = c(\"pref_code\", \"pref_name\")) |> \n  ggplot(aes(fill = foreigner_ratio)) +\n  geom_sf(color = \"transparent\") +\n  scale_fill_viridis_c(\"外国人人口比率\",\n                       limits = c(0, 0.03),\n                       labels = scales::label_percent(),\n                       option = \"turbo\")\n\njpmap::layout_islands(plot,\n                      ogasawara = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: `layout_islands()` was deprecated in jpmap 0.2.0.\nℹ Please use `layout_japan()` instead.\n```\n:::\n\n::: {.cell-output-display}\n![](draw-a-map-of-japan-in-r-ja_files/figure-html/jpmap-1.png){width=672}\n:::\n:::\n\n\n\n\n## まとめ（地図からわかったこと）\n\n2015年の都道府県別外国人人口比率に関する日本地図から以下のことがわかりました．\n\n-   2015年では**どの都道府県でも外国人人口比率が3％以下**である\n\n-   **東京都**は外国人人口比率が最も多く，**愛知県**や**群馬県**なども外国人口比率が高い．\n\nここまで，ggplot2などのパッケージを活用した日本地図の描画を試してみました．\n\nその結果，Rを使えば，自前でデータを整備しなくても，簡単に日本地図を描けることがわかりました．みなさんもぜひ，ggplot2を使って，色々な地図を使ってみてください！\n",
    "supporting": [
      "draw-a-map-of-japan-in-r-ja_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}